{"remainingRequest":"D:\\dewebblog\\dwebhtml\\node_modules\\babel-loader\\lib\\index.js!D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue","mtime":1608289432809},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserPerm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"dweb\">\r\n            <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <div class=\"body dweb\">\r\n            <div class=\"dweb\">\r\n                <h5>新建用户组</h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n            <el-row :gutter=\"10\">\r\n                <el-col :xs=\"24\" :lg=\"12\">\r\n                    <div class=\"new-group dweb\">\r\n                        <el-form :inline=\"true\" :model=\"new_group\" class=\"demo-form-inline\">\r\n                            <el-form-item>\r\n                                <el-input v-model=\"new_group.name\" placeholder=\"新用户组名称\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item>\r\n                                <el-button @click=\"saveNewGroup()\" type=\"primary\">保存</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </div>\r\n\r\n                </el-col>\r\n                <el-col :xs=\"24\" :lg=\"12\">\r\n                    <div class=\"perm-list dweb\">\r\n                        <el-row>\r\n                            <el-col v-for=\"(item,index) in new_group.checkList\" :key=\"index\" :span=\"24\"\r\n                                style=\"border-bottom: 1px solid #ffff;padding: 5px 0;\">\r\n                                <el-button @click=\"chooseAllmethod(index)\" type=\"primary\" plain\r\n                                    style=\"float: left;margin-right: 10px;\">{{item.name}}\r\n                                </el-button>\r\n                                <el-checkbox-group v-model=\"item.checkList\" style=\"float: left;\">\r\n                                    <el-checkbox v-for=\"method in item.perm_methods\" :key=\"method.codename\"\r\n                                        :label=\"method.codename\">{{ method.name }}</el-checkbox>\r\n                                </el-checkbox-group>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n            <div class=\"body dweb\">\r\n                <h5>所有用户组</h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n\r\n            <div class=\"body dweb\">\r\n                <el-row>\r\n                    <el-col v-for=\"(item,index) in all_groups\" :key=index :xs=\"12\" :lg=\"4\">\r\n                        <el-button-group>\r\n                            <el-button v-if=\"index == choosed_group\" @click=\"chooseGroup(index)\" type=\"warning\">{{ item.name }}</el-button>\r\n                            <el-button v-else @click=\"chooseGroup(index)\" type=\"primary\">{{ item.name }}</el-button>\r\n                            <el-button @click=\"deleteGroup(item.name)\" type=\"danger\" icon=\"el-icon-delete\"></el-button>\r\n                        </el-button-group>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>\r\n            <div class=\"body dweb\">\r\n                <h5>\r\n                    用户列表\r\n                </h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n\r\n            <el-row :gutter=\"10\">\r\n                <el-col :span=\"16\">\r\n                    <div class=\"body dweb\">\r\n                        <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入用户名\" v-model=\"choosed_user\"\r\n                            :data=\"userlist\">\r\n                        </el-transfer>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <div class=\"body dweb\">\r\n                        <el-button @click=\"setUserToGroup\" type=\"success\">保存分配用户</el-button>\r\n                    </div>\r\n                        \r\n                </el-col>\r\n            </el-row>\r\n\r\n           \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    import Qs from 'qs'\r\n    export default {\r\n        data() {\r\n            \r\n            return {\r\n                new_group: {\r\n                    name: '',\r\n                    checkList: [\r\n                        {\r\n                            // 文章管理\r\n                            name: \"文章管理\",\r\n                            content_type: \"blog_article\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        },\r\n                        {\r\n                            // 用户管理\r\n                            name: \"用户管理\",\r\n                            content_type: \"auth_user\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        },\r\n                        {\r\n                            // 栏目管理\r\n                            name: \"栏目管理\",\r\n                            content_type: \"blog_lanmu\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        }\r\n                    ]\r\n                },\r\n                all_groups: [],\r\n\r\n                // 用户列表分配\r\n                userlist: [],\r\n                choosed_user: [],\r\n                choosed_group:0,\r\n                filterMethod(query, item) {\r\n                    return item.name.indexOf(query) > -1;\r\n                }\r\n            };\r\n        },\r\n        mounted() {\r\n            this.getAllUserGroup();\r\n            this.getUserList();\r\n        },\r\n        methods: {\r\n            // 保存分配用户组\r\n            setUserToGroup(){\r\n                \r\n                let group = this.all_groups[this.choosed_group]\r\n                let userlist = this.choosed_user\r\n\r\n                if (userlist.length==0) {\r\n                    alert('没有选择用户')\r\n                    return\r\n                }\r\n                \r\n                // 提交用户组分组\r\n                axios({\r\n                    method:'post',\r\n                    url: \"http://127.0.0.1:9000/api/dweb-group/\",\r\n                    data:Qs.stringify({\r\n                        token:this.$store.getters.isnotUserlogin,\r\n                        group:group.name,\r\n                        userlist:JSON.stringify(userlist)  \r\n                    })\r\n                }).then((res)=>{\r\n                    console.log(res.data)\r\n                    if (res.data == 'nologin') {\r\n                        alert('尚未登录')\r\n                        return\r\n                    }\r\n                    if (res.data == 'noperm') {\r\n                        alert('权限不足')\r\n                        return\r\n                    }\r\n                    if (res.data == 'ok') {\r\n                        alert('用户权限分配成功')\r\n\r\n                    }\r\n                })\r\n\r\n            },\r\n            // 选择用户组\r\n            chooseGroup(index){\r\n                this.choosed_group = index\r\n            },\r\n            // 用户列表\r\n            getUserList () {\r\n                axios({\r\n                    method:\"get\",\r\n                    url: \"http://127.0.0.1:9000/api/dweb-userlist/\",\r\n                }).then((res)=>{\r\n                    console.log(res.data)\r\n                    let userlist = res.data\r\n                    userlist.forEach((user) => {\r\n                        this.userlist.push({\r\n                        label: user.name,\r\n                        key: user.name,\r\n                        name:user.name,\r\n                    });\r\n                });\r\n                })\r\n            },\r\n            // 获取所有用户组\r\n            getAllUserGroup() {\r\n                axios({\r\n                    method: 'get',\r\n                    url: 'http://127.0.0.1:9000/api/dweb-group/',\r\n                }).then((res) => {\r\n                    console.log(res.data)\r\n                    this.all_groups = res.data\r\n                })\r\n            },\r\n            // 删除用户组\r\n            deleteGroup(name) {\r\n                axios({\r\n                    method: \"delete\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    },\r\n                    url: \"http://127.0.0.1:9000/api/dweb-group/\",\r\n                    data: Qs.stringify({\r\n                        name: name,\r\n                        token: this.$store.getters.isnotUserlogin\r\n                    })\r\n                }).then((res) => {\r\n                    console.log(res.data)\r\n                    if (res.data == 'nologin') {\r\n                        alert('尚未登录')\r\n                        return\r\n                    }\r\n                    if (res.data == 'noperm') {\r\n                        alert('权限不足')\r\n                        return\r\n                    }\r\n                    if (res.data == 'ok') {\r\n                        this.getAllUserGroup()\r\n                    }\r\n                })\r\n            },\r\n\r\n            // 全选 权限多选框\r\n            chooseAllmethod(index) {\r\n                if (this.new_group.checkList[index].checkList.length == 0) {\r\n                    this.new_group.checkList[index].checkList = [\"add\", \"delete\", \"change\", \"view\"]\r\n                } else {\r\n                    this.new_group.checkList[index].checkList = []\r\n                }\r\n\r\n            },\r\n            saveNewGroup() {\r\n                // 判断名称输入\r\n                if (this.new_group.name.length == 0) {\r\n                    alert('请输入组名')\r\n                    return\r\n                }\r\n                // 判断权限选择\r\n                let checkType = false\r\n                let perm_list = []\r\n                this.new_group.checkList.forEach((obj) => {\r\n                    if (obj.checkList.length > 0) {\r\n                        checkType = true\r\n                        let perm_item = {\r\n                            content_type: obj.content_type,\r\n                            perm_methods: obj.checkList,\r\n                        }\r\n                        perm_list.push(perm_item)\r\n                    }\r\n                })\r\n                if (checkType) {\r\n                    // 执行提交\r\n                    let checkInfo = {\r\n                        contentType: 'auth_user',\r\n                        permissions: ['add', 'change', 'delete', 'view']\r\n                    }\r\n                    this.$store.dispatch(\"checkUserPerm\", checkInfo).then((res) => {\r\n                        if (res) {\r\n                            axios({\r\n                                method: 'put',\r\n                                url: 'http://127.0.0.1:9000/api/dweb-group/',\r\n                                data: Qs.stringify({\r\n                                    token: this.$store.getters.isnotUserlogin,\r\n                                    new_group: this.new_group.name,\r\n                                    perm_list: JSON.stringify(perm_list)\r\n                                })\r\n                            }).then((res) => {\r\n                                console.log(res.data)\r\n                                if (res.data == 'nologin') {\r\n                                    alert('尚未登录')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'noperm') {\r\n                                    alert('权限不足')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'same name') {\r\n                                    alert('重复命名')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'ok') {\r\n                                    this.getAllUserGroup()\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                    })\r\n                    // 执行提交\r\n                } else {\r\n                    alert('新用户组 权限未选择')\r\n                    return\r\n                }\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .dweb {\r\n        padding: 10px 10px;\r\n    }\r\n\r\n    .new-group {\r\n        height: 200px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .perm-list {\r\n        height: 200px;\r\n        overflow-y: scroll;\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]}