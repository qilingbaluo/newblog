{"remainingRequest":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue?vue&type=template&id=20366215&scoped=true&","dependencies":[{"path":"D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue","mtime":1608289432809},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}