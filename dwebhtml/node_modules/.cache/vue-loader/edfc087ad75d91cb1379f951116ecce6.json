{"remainingRequest":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dewebblog\\dwebhtml\\src\\views\\UserPerm.vue","mtime":1608289432809},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\dewebblog\\dwebhtml\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserPerm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"UserPerm.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"dweb\">\r\n            <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n\r\n        <div class=\"body dweb\">\r\n            <div class=\"dweb\">\r\n                <h5>新建用户组</h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n            <el-row :gutter=\"10\">\r\n                <el-col :xs=\"24\" :lg=\"12\">\r\n                    <div class=\"new-group dweb\">\r\n                        <el-form :inline=\"true\" :model=\"new_group\" class=\"demo-form-inline\">\r\n                            <el-form-item>\r\n                                <el-input v-model=\"new_group.name\" placeholder=\"新用户组名称\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item>\r\n                                <el-button @click=\"saveNewGroup()\" type=\"primary\">保存</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </div>\r\n\r\n                </el-col>\r\n                <el-col :xs=\"24\" :lg=\"12\">\r\n                    <div class=\"perm-list dweb\">\r\n                        <el-row>\r\n                            <el-col v-for=\"(item,index) in new_group.checkList\" :key=\"index\" :span=\"24\"\r\n                                style=\"border-bottom: 1px solid #ffff;padding: 5px 0;\">\r\n                                <el-button @click=\"chooseAllmethod(index)\" type=\"primary\" plain\r\n                                    style=\"float: left;margin-right: 10px;\">{{item.name}}\r\n                                </el-button>\r\n                                <el-checkbox-group v-model=\"item.checkList\" style=\"float: left;\">\r\n                                    <el-checkbox v-for=\"method in item.perm_methods\" :key=\"method.codename\"\r\n                                        :label=\"method.codename\">{{ method.name }}</el-checkbox>\r\n                                </el-checkbox-group>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n            <div class=\"body dweb\">\r\n                <h5>所有用户组</h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n\r\n            <div class=\"body dweb\">\r\n                <el-row>\r\n                    <el-col v-for=\"(item,index) in all_groups\" :key=index :xs=\"12\" :lg=\"4\">\r\n                        <el-button-group>\r\n                            <el-button v-if=\"index == choosed_group\" @click=\"chooseGroup(index)\" type=\"warning\">{{ item.name }}</el-button>\r\n                            <el-button v-else @click=\"chooseGroup(index)\" type=\"primary\">{{ item.name }}</el-button>\r\n                            <el-button @click=\"deleteGroup(item.name)\" type=\"danger\" icon=\"el-icon-delete\"></el-button>\r\n                        </el-button-group>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>\r\n            <div class=\"body dweb\">\r\n                <h5>\r\n                    用户列表\r\n                </h5>\r\n                <el-divider></el-divider>\r\n            </div>\r\n\r\n            <el-row :gutter=\"10\">\r\n                <el-col :span=\"16\">\r\n                    <div class=\"body dweb\">\r\n                        <el-transfer filterable :filter-method=\"filterMethod\" filter-placeholder=\"请输入用户名\" v-model=\"choosed_user\"\r\n                            :data=\"userlist\">\r\n                        </el-transfer>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"8\">\r\n                    <div class=\"body dweb\">\r\n                        <el-button @click=\"setUserToGroup\" type=\"success\">保存分配用户</el-button>\r\n                    </div>\r\n                        \r\n                </el-col>\r\n            </el-row>\r\n\r\n           \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    import Qs from 'qs'\r\n    export default {\r\n        data() {\r\n            \r\n            return {\r\n                new_group: {\r\n                    name: '',\r\n                    checkList: [\r\n                        {\r\n                            // 文章管理\r\n                            name: \"文章管理\",\r\n                            content_type: \"blog_article\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        },\r\n                        {\r\n                            // 用户管理\r\n                            name: \"用户管理\",\r\n                            content_type: \"auth_user\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        },\r\n                        {\r\n                            // 栏目管理\r\n                            name: \"栏目管理\",\r\n                            content_type: \"blog_lanmu\",\r\n                            perm_methods: [\r\n                                {\r\n                                    name: \"增\",\r\n                                    codename: \"add\"\r\n                                },\r\n                                {\r\n                                    name: \"删\",\r\n                                    codename: \"delete\"\r\n                                },\r\n                                {\r\n                                    name: \"改\",\r\n                                    codename: \"change\"\r\n                                },\r\n                                {\r\n                                    name: \"查\",\r\n                                    codename: \"view\"\r\n                                },\r\n                            ],\r\n                            checkList: []\r\n                        }\r\n                    ]\r\n                },\r\n                all_groups: [],\r\n\r\n                // 用户列表分配\r\n                userlist: [],\r\n                choosed_user: [],\r\n                choosed_group:0,\r\n                filterMethod(query, item) {\r\n                    return item.name.indexOf(query) > -1;\r\n                }\r\n            };\r\n        },\r\n        mounted() {\r\n            this.getAllUserGroup();\r\n            this.getUserList();\r\n        },\r\n        methods: {\r\n            // 保存分配用户组\r\n            setUserToGroup(){\r\n                \r\n                let group = this.all_groups[this.choosed_group]\r\n                let userlist = this.choosed_user\r\n\r\n                if (userlist.length==0) {\r\n                    alert('没有选择用户')\r\n                    return\r\n                }\r\n                \r\n                // 提交用户组分组\r\n                axios({\r\n                    method:'post',\r\n                    url: \"http://127.0.0.1:9000/api/dweb-group/\",\r\n                    data:Qs.stringify({\r\n                        token:this.$store.getters.isnotUserlogin,\r\n                        group:group.name,\r\n                        userlist:JSON.stringify(userlist)  \r\n                    })\r\n                }).then((res)=>{\r\n                    console.log(res.data)\r\n                    if (res.data == 'nologin') {\r\n                        alert('尚未登录')\r\n                        return\r\n                    }\r\n                    if (res.data == 'noperm') {\r\n                        alert('权限不足')\r\n                        return\r\n                    }\r\n                    if (res.data == 'ok') {\r\n                        alert('用户权限分配成功')\r\n\r\n                    }\r\n                })\r\n\r\n            },\r\n            // 选择用户组\r\n            chooseGroup(index){\r\n                this.choosed_group = index\r\n            },\r\n            // 用户列表\r\n            getUserList () {\r\n                axios({\r\n                    method:\"get\",\r\n                    url: \"http://127.0.0.1:9000/api/dweb-userlist/\",\r\n                }).then((res)=>{\r\n                    console.log(res.data)\r\n                    let userlist = res.data\r\n                    userlist.forEach((user) => {\r\n                        this.userlist.push({\r\n                        label: user.name,\r\n                        key: user.name,\r\n                        name:user.name,\r\n                    });\r\n                });\r\n                })\r\n            },\r\n            // 获取所有用户组\r\n            getAllUserGroup() {\r\n                axios({\r\n                    method: 'get',\r\n                    url: 'http://127.0.0.1:9000/api/dweb-group/',\r\n                }).then((res) => {\r\n                    console.log(res.data)\r\n                    this.all_groups = res.data\r\n                })\r\n            },\r\n            // 删除用户组\r\n            deleteGroup(name) {\r\n                axios({\r\n                    method: \"delete\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    },\r\n                    url: \"http://127.0.0.1:9000/api/dweb-group/\",\r\n                    data: Qs.stringify({\r\n                        name: name,\r\n                        token: this.$store.getters.isnotUserlogin\r\n                    })\r\n                }).then((res) => {\r\n                    console.log(res.data)\r\n                    if (res.data == 'nologin') {\r\n                        alert('尚未登录')\r\n                        return\r\n                    }\r\n                    if (res.data == 'noperm') {\r\n                        alert('权限不足')\r\n                        return\r\n                    }\r\n                    if (res.data == 'ok') {\r\n                        this.getAllUserGroup()\r\n                    }\r\n                })\r\n            },\r\n\r\n            // 全选 权限多选框\r\n            chooseAllmethod(index) {\r\n                if (this.new_group.checkList[index].checkList.length == 0) {\r\n                    this.new_group.checkList[index].checkList = [\"add\", \"delete\", \"change\", \"view\"]\r\n                } else {\r\n                    this.new_group.checkList[index].checkList = []\r\n                }\r\n\r\n            },\r\n            saveNewGroup() {\r\n                // 判断名称输入\r\n                if (this.new_group.name.length == 0) {\r\n                    alert('请输入组名')\r\n                    return\r\n                }\r\n                // 判断权限选择\r\n                let checkType = false\r\n                let perm_list = []\r\n                this.new_group.checkList.forEach((obj) => {\r\n                    if (obj.checkList.length > 0) {\r\n                        checkType = true\r\n                        let perm_item = {\r\n                            content_type: obj.content_type,\r\n                            perm_methods: obj.checkList,\r\n                        }\r\n                        perm_list.push(perm_item)\r\n                    }\r\n                })\r\n                if (checkType) {\r\n                    // 执行提交\r\n                    let checkInfo = {\r\n                        contentType: 'auth_user',\r\n                        permissions: ['add', 'change', 'delete', 'view']\r\n                    }\r\n                    this.$store.dispatch(\"checkUserPerm\", checkInfo).then((res) => {\r\n                        if (res) {\r\n                            axios({\r\n                                method: 'put',\r\n                                url: 'http://127.0.0.1:9000/api/dweb-group/',\r\n                                data: Qs.stringify({\r\n                                    token: this.$store.getters.isnotUserlogin,\r\n                                    new_group: this.new_group.name,\r\n                                    perm_list: JSON.stringify(perm_list)\r\n                                })\r\n                            }).then((res) => {\r\n                                console.log(res.data)\r\n                                if (res.data == 'nologin') {\r\n                                    alert('尚未登录')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'noperm') {\r\n                                    alert('权限不足')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'same name') {\r\n                                    alert('重复命名')\r\n                                    return\r\n                                }\r\n                                if (res.data == 'ok') {\r\n                                    this.getAllUserGroup()\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                    })\r\n                    // 执行提交\r\n                } else {\r\n                    alert('新用户组 权限未选择')\r\n                    return\r\n                }\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .dweb {\r\n        padding: 10px 10px;\r\n    }\r\n\r\n    .new-group {\r\n        height: 200px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .perm-list {\r\n        height: 200px;\r\n        overflow-y: scroll;\r\n    }\r\n</style>"]}]}